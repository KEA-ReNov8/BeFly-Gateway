name: Deploy to On-Premise via FortiGate VPN

# developÏóê pushÏãú workflow ÏÉùÏÑ±
on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install openfortivpn
        run: sudo apt-get update && sudo apt-get install -y openfortivpn

      # 3. FortiGate VPN Ïó∞Í≤∞
      - name: Connect to FortiGate VPN
        run: |
          sudo mkdir -p /var/log/openfortivpn
          sudo touch /var/log/openfortivpn/vpn.log
          sudo chmod 666 /var/log/openfortivpn/vpn.log

          echo "üîê Connecting to FortiGate VPN..."

          # VPN Ïó∞Í≤∞ ÏãúÏûë (Î∞±Í∑∏ÎùºÏö¥Îìú Ïã§Ìñâ)
          sudo openfortivpn ${{ secrets.VPN_SERVER }}:${{ secrets.VPN_PORT }} \
            -u ${{ secrets.VPN_USERNAME }} \
            -p "${{ secrets.VPN_PASSWORD }}" \
            --no-dns \
            >> /var/log/openfortivpn/vpn.log 2>&1 &

          # Ïû†Ïãú ÎåÄÍ∏∞
          sleep 10

          echo "üì° VPN Ïó∞Í≤∞ Î°úÍ∑∏:"
          tail -n 20 /var/log/openfortivpn/vpn.log

          # Ïã§Ìå® Ïó¨Î∂Ä Ï≤¥ÌÅ¨
          if grep -q "ERROR" /var/log/openfortivpn/vpn.log || ! pgrep openfortivpn > /dev/null; then
            echo "‚ùå FortiGate VPN Ïó∞Í≤∞ Ïã§Ìå®. Î°úÍ∑∏Î•º ÌôïÏù∏ÌïòÏÑ∏Ïöî."
            exit 1
          else
            echo "‚úÖ VPN Ïó∞Í≤∞ ÏÑ±Í≥µ."
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: make application.yml
        run: |
            cd ./src/main
            mkdir -p resources
            cd resources
            
            touch ./application.yml
            echo "${{ secrets.APPLICATION_YML }}" >> ./application.yml

      # 1-2. application-dev.yml ÌååÏùº ÏÉùÏÑ±
      - name: make application-dev.yml
        run: |
              cd ./src/main
              cd ./resources
            
              touch ./application-dev.yml
              echo "${{ secrets.APPLICATION_DEV_YML }}" >> ./application-dev.yml

      - name: Build with Gradle
        run: |
            chmod +x ./gradlew 
            ./gradlew clean build -x test

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/befly-gateway:latest .

      - name: Push to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/befly-gateway:latest
          
      - name: Connect SSH
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            echo "‚úÖ SSH Ï†ëÏÜç ÏÑ±Í≥µ!"
            hostname




    
